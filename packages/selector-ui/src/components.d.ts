/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Theme } from "./components/wallet-selector-modal/wallet-selector-modal";
import { Components } from "./components";
export namespace Components {
    interface AlertMessage {
        "message": string;
    }
    interface CloseButton {
    }
    interface WalletSelector {
        "setSelector": (selector: unknown) => Promise<void>;
    }
    interface WalletSelectorModal {
        /**
          * Method to hide the modal
         */
        "hide": () => Promise<void>;
        "setSelector": (selector: unknown) => Promise<void>;
        /**
          * Method to show the modal.
         */
        "show": () => Promise<void>;
        /**
          * The prefered theme for the modal.
         */
        "theme": Theme;
    }
}
declare global {
    interface HTMLAlertMessageElement extends Components.AlertMessage, HTMLStencilElement {
    }
    var HTMLAlertMessageElement: {
        prototype: HTMLAlertMessageElement;
        new (): HTMLAlertMessageElement;
    };
    interface HTMLCloseButtonElement extends Components.CloseButton, HTMLStencilElement {
    }
    var HTMLCloseButtonElement: {
        prototype: HTMLCloseButtonElement;
        new (): HTMLCloseButtonElement;
    };
    interface HTMLWalletSelectorElement extends Components.WalletSelector, HTMLStencilElement {
    }
    var HTMLWalletSelectorElement: {
        prototype: HTMLWalletSelectorElement;
        new (): HTMLWalletSelectorElement;
    };
    interface HTMLWalletSelectorModalElement extends Components.WalletSelectorModal, HTMLStencilElement {
    }
    var HTMLWalletSelectorModalElement: {
        prototype: HTMLWalletSelectorModalElement;
        new (): HTMLWalletSelectorModalElement;
    };
    interface HTMLElementTagNameMap {
        "alert-message": HTMLAlertMessageElement;
        "close-button": HTMLCloseButtonElement;
        "wallet-selector": HTMLWalletSelectorElement;
        "wallet-selector-modal": HTMLWalletSelectorModalElement;
    }
}
declare namespace LocalJSX {
    interface AlertMessage {
        "message": string;
        "onNearBackEvent"?: (event: CustomEvent<MouseEvent>) => void;
    }
    interface CloseButton {
        "onNearModalCloseEvent"?: (event: CustomEvent<MouseEvent>) => void;
    }
    interface WalletSelector {
    }
    interface WalletSelectorModal {
        /**
          * The prefered theme for the modal.
         */
        "theme"?: Theme;
    }
    interface IntrinsicElements {
        "alert-message": AlertMessage;
        "close-button": CloseButton;
        "wallet-selector": WalletSelector;
        "wallet-selector-modal": WalletSelectorModal;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "alert-message": LocalJSX.AlertMessage & JSXBase.HTMLAttributes<HTMLAlertMessageElement>;
            "close-button": LocalJSX.CloseButton & JSXBase.HTMLAttributes<HTMLCloseButtonElement>;
            "wallet-selector": LocalJSX.WalletSelector & JSXBase.HTMLAttributes<HTMLWalletSelectorElement>;
            "wallet-selector-modal": LocalJSX.WalletSelectorModal & JSXBase.HTMLAttributes<HTMLWalletSelectorModalElement>;
        }
    }
}
